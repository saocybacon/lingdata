%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%Title: Window .t.p.f2.n.f2.t.scrolled
%%CreationDate: Sat Oct 16 01:52:36 2021
%%BoundingBox: 110 357 503 435
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font SegoeUi
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/afii10051/afii10052/quotesinglbase/afii10100/quotedblbase/ellipsis/dagger/daggerdbl
/Euro/perthousand/afii10058/guilsinglleft/afii10059/afii10061/afii10060/afii10145
/afii10099/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
/space/trademark/afii10106/guilsinglright/afii10107/afii10109/afii10108/afii10193
/space/afii10062/afii10110/afii10057/currency/afii10050/brokenbar/section
/afii10023/copyright/afii10053/guillemotleft/logicalnot/hyphen/registered/afii10056
/degree/plusminus/afii10055/afii10103/afii10098/mu/paragraph/periodcentered
/afii10071/afii61352/afii10101/guillemotright/afii10105/afii10054/afii10102/afii10104
/afii10017/afii10018/afii10019/afii10020/afii10021/afii10022/afii10024/afii10025
/afii10026/afii10027/afii10028/afii10029/afii10030/afii10031/afii10032/afii10033
/afii10034/afii10035/afii10036/afii10037/afii10038/afii10039/afii10040/afii10041
/afii10042/afii10043/afii10044/afii10045/afii10046/afii10047/afii10048/afii10049
/afii10065/afii10066/afii10067/afii10068/afii10069/afii10070/afii10072/afii10073
/afii10074/afii10075/afii10076/afii10077/afii10078/afii10079/afii10080/afii10081
/afii10082/afii10083/afii10084/afii10085/afii10086/afii10087/afii10088/afii10089
/afii10090/afii10091/afii10092/afii10093/afii10094/afii10095/afii10096/afii10097
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font SegoeUi
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.7491 0.7491 scale
-261 -51 translate
0 102 moveto 523 102 lineto 523 0 lineto 0 0 lineto closepath clip newpath
gsave
/SegoeUi findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
10 92 [
[(Plot: 1    FILE: livecorpus2021_lemma_pos.1.txt)]
] 15 -0.0 0.0 0 false DrawText
grestore
gsave
10 67 moveto 400 0 rlineto 0 -35 rlineto -400 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.216 0.451 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
41.6215558170677 78 [
[(1)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
41.6215558170677 67 moveto
41.6215558170677 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.2698129286207 78 [
[(2)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.2698129286207 67 moveto
42.2698129286207 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.3357545753358 78 [
[(3)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.3357545753358 67 moveto
42.3357545753358 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.4493771050603 78 [
[(4)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.4493771050603 67 moveto
42.4493771050603 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.50517388305 78 [
[(5)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.50517388305 67 moveto
42.50517388305 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.6187964127744 78 [
[(6)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.6187964127744 67 moveto
42.6187964127744 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.6695207564014 78 [
[(7)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.6695207564014 67 moveto
42.6695207564014 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.7161871525382 78 [
[(8)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.7161871525382 67 moveto
42.7161871525382 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.7973461023414 78 [
[(9)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.7973461023414 67 moveto
42.7973461023414 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.8724181309094 78 [
[(10)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.8724181309094 67 moveto
42.8724181309094 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
42.9241569614089 78 [
[(11)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
42.9241569614089 67 moveto
42.9241569614089 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
43.1199529278091 78 [
[(12)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
43.1199529278091 67 moveto
43.1199529278091 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
43.3553138822384 78 [
[(13)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
43.3553138822384 67 moveto
43.3553138822384 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
44.299801160573 78 [
[(14)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
44.299801160573 67 moveto
44.299801160573 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 6 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
46.1481962423406 78 [
[(15)]
] 11 -0.5 0.0 0 false DrawText
grestore
gsave
46.1481962423406 67 moveto
46.1481962423406 32 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/SegoeUi findfont 9 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
420 67 [
[(Hits: 15 )]
[(Chars: 394288)]
] 15 -0.0 0.0 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
